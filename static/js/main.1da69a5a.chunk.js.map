{"version":3,"sources":["store/apiactions.js","store/words.js","components/Navbar.jsx","components/AddNewWordModal.jsx","components/WordsList.jsx","App.js","store/entities.js","store/reducer.js","store/middleware/api.js","index.js","store/configureStore.js"],"names":["apiCallBegan","createAction","apiCallSuccess","apiCallFailed","slice","createSlice","name","initialState","list","loading","lastfetch","searchItems","reducers","wordsRequested","words","action","wordsReceived","payload","Date","now","wordsRequestFailed","wordAdded","push","wordsSearch","filter","word","key","includes","toLowerCase","trim","actions","useStyles","makeStyles","theme","root","flexGrow","title","fontFamily","textField","width","Navbar","searchText","setSearchText","useState","show","setShow","classes","dispatch","useDispatch","className","AppBar","position","Toolbar","style","backgroundColor","Typography","variant","onClick","autoFocus","type","color","border","value","onChange","e","target","right","modal","height","display","alignItems","justifyContent","heading","addWordForm","flexDirection","palette","background","paper","padding","spacing","buttons","AddNewWordModal","showAddForm","handleSubmit","setShowAddForm","setLoading","Modal","aria-labelledby","aria-describedby","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","onSubmit","TextField","id","label","marginLeft","marginTop","Button","CircularProgress","maxWidth","maxHeight","overflow","inline","boxShadow","shadows","fab","bottom","WordsList","setOpen","currentWord","setCurrentWord","dictionary","useSelector","state","entities","useEffect","a","getState","url","onStart","onSuccess","onError","getAllWords","preventDefault","axios","post","data","List","map","idx","Fragment","ListItem","ListItemText","primary","secondary","component","category","definition","Divider","Fab","etymology","example","shortDef","subExample","App","combineReducers","wordsReducer","entitiesReducer","api","next","method","request","baseURL","response","message","store","configureStore","reducer","middleware","getDefaultMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1da69a5a.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const apiCallBegan = createAction(`api/callBegan`);\nexport const apiCallSuccess = createAction(`api/callSuccess`);\nexport const apiCallFailed = createAction(`api/callFailed`);\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { apiCallBegan } from './apiactions';\n\nconst slice = createSlice({\n    name: 'words',\n    initialState: {\n        list: [],\n        loading: false,\n        lastfetch: null,\n        searchItems: []\n    },\n    reducers: {\n        wordsRequested: (words, action) => {\n            words.loading = true\n        },\n\n        wordsReceived: (words, action) => {\n            words.list = action.payload;\n            words.searchItems = action.payload;\n            words.loading = false;\n            words.lastfetch = Date.now();\n        },\n\n        wordsRequestFailed: (words, action) => {\n            words.loading = false;\n        },\n        wordAdded: (words, action) => {\n            words.list.push(action.payload)\n            words.searchItems.push(action.payload)\n        },\n        wordsSearch: (words, action) => {\n            words.searchItems = words.list.filter(word => word.key.includes(action.payload.toLowerCase().trim()))\n        }\n    }\n})\nexport const { wordsRequested, wordsReceived, wordsRequestFailed, wordAdded, wordsSearch } = slice.actions\nexport default slice.reducer\n\n//Action Creators\nconst url = ''\n\n//Getting List of words from server\n\nexport const loadWords = () => (dispatch, getState) => {\n    return dispatch(\n        apiCallBegan({\n            url,\n            onStart: wordsRequested.type,\n            onSuccess: wordsReceived.type,\n            onError: wordsRequestFailed.type,\n        })\n    );\n};","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { useDispatch } from \"react-redux\";\nimport { wordsSearch } from \"../store/words\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n    fontFamily: \"Kumbh Sans\",\n  },\n  textField: {\n    width: 100,\n  },\n}));\n\nexport default function Navbar({ searchText, setSearchText }) {\n  const [show, setShow] = useState(false);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar style={{ backgroundColor: \"#4f053b\" }}>\n          {!show ? (\n            <Typography variant=\"h6\" className={classes.title}>\n              Vocabs\n            </Typography>\n          ) : (\n            \"\"\n          )}\n          {!show ? <SearchIcon onClick={() => setShow(!show)} /> : \"\"}\n          {show ? (\n            <>\n              <input\n                autoFocus\n                type=\"text\"\n                style={{\n                  color: \"white\",\n                  backgroundColor: \"#4f053b\",\n                  border: \"none\",\n                }}\n                value={searchText}\n                onChange={(e) => {\n                  setSearchText(e.target.value);\n                  dispatch(wordsSearch(e.target.value));\n                }}\n              />\n              {\n                <ClearIcon\n                  style={{ position: \"absolute\", right: \"25px\" }}\n                  onClick={() => {\n                    setShow(!show);\n                    setSearchText(\"\");\n                    dispatch(wordsSearch(\"\"));\n                  }}\n                />\n              }\n            </>\n          ) : (\n            \"\"\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { CircularProgress, makeStyles, Modal } from \"@material-ui/core\";\nimport React from \"react\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport { Button } from \"@material-ui/core\";\nimport { TextField } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport { Fade } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  heading: {\n    fontFamily: \"Kumbh Sans\",\n  },\n  addWordForm: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    padding: theme.spacing(2, 4, 3),\n  },\n  buttons: {\n    color: \"#4f053b\",\n  },\n}));\n\nconst AddNewWordModal = ({\n  showAddForm,\n  handleSubmit,\n  setShowAddForm,\n  searchText,\n  setSearchText,\n  loading,\n  setLoading,\n}) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={showAddForm}\n        onClose={() => setShowAddForm(false)}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}>\n        <Fade in={showAddForm}>\n          <div className={classes.addWordForm}>\n            <Typography variant=\"h6\">Add To Dictionary</Typography>\n            <form onSubmit={handleSubmit}>\n              <div>\n                <TextField\n                  id=\"standard-basic\"\n                  label=\"New Word\"\n                  value={searchText}\n                  onChange={(e) => setSearchText(e.target.value)}\n                />\n              </div>\n              <div style={{ marginLeft: \"70px\", marginTop: \"30px\" }}>\n                <Button\n                  className={classes.buttons}\n                  onClick={() => setShowAddForm(false)}>\n                  Cancel\n                </Button>\n                <Button className={classes.buttons} onClick={handleSubmit}>\n                  {loading ? <CircularProgress color=\"secondary\" /> : \"Add\"}\n                </Button>\n              </div>\n            </form>\n          </div>\n        </Fade>\n      </Modal>\n    </>\n  );\n};\n\nexport default AddNewWordModal;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Modal } from \"@material-ui/core\";\nimport { Fade } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loadWords, wordAdded } from \"../store/words\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport AddNewWordModal from \"./AddNewWordModal\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n    marginTop: \"50px\",\n    backgroundColor: theme.palette.background.paper,\n    overflow: \"auto\",\n    fontFamily: \"Kumbh Sans\",\n  },\n  inline: {\n    display: \"inline\",\n  },\n  modal: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    height: \"104vh\",\n    width: \"100vh\",\n    marginTop: \"10vh\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  fab: {\n    position: \"fixed\",\n    bottom: \"20px\",\n    right: 10,\n    backgroundColor: \"#4f053b\",\n  },\n}));\n\nconst WordsList = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [currentWord, setCurrentWord] = useState(0);\n  const dictionary = useSelector((state) => state.entities.words.searchItems);\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    const getAllWords = async () => {\n      dispatch(loadWords());\n    };\n    getAllWords();\n  }, [dispatch]);\n\n  //Adding new Word\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!searchText) return;\n    setLoading(true);\n\n    const { data } = await axios.post(\n      \"https://vocabs-dictionary.herokuapp.com/verifyword\",\n      {\n        word: searchText,\n      }\n    );\n    dispatch(wordAdded(data));\n\n    setSearchText(\"\");\n    setLoading(false);\n    setShowAddForm(false);\n  };\n\n  return (\n    <>\n      <List className={classes.root}>\n        {dictionary &&\n          dictionary.map((word, idx) => {\n            return (\n              <React.Fragment key={word.key}>\n                <ListItem\n                  alignItems=\"flex-start\"\n                  onClick={() => {\n                    setOpen(true);\n                    setCurrentWord(idx);\n                  }}>\n                  <ListItemText\n                    primary={word.key}\n                    secondary={\n                      <React.Fragment>\n                        <Typography\n                          component=\"span\"\n                          variant=\"body2\"\n                          className={classes.inline}\n                          color=\"textPrimary\">\n                          ({word.category}){word.definition}\n                        </Typography>\n                      </React.Fragment>\n                    }\n                  />\n                </ListItem>\n                <Divider variant=\"fullWidth\" component=\"li\" />\n              </React.Fragment>\n            );\n          })}\n      </List>\n      <Fab className={classes.fab} color=\"primary\">\n        <AddIcon onClick={() => setShowAddForm(true)}>Add word</AddIcon>\n      </Fab>\n      {/* Full Screen Modal */}\n      <Modal\n        className={classes.modal}\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}>\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <ClearIcon\n              style={{ marginLeft: \"98%\", marginTop: \"4%\" }}\n              onClick={() => setOpen(false)}\n            />\n            <h1 id=\"transition-modal-title\">\n              {dictionary && dictionary[currentWord]?.key}\n            </h1>\n            <p id=\"transition-modal-description\" style={{ color: \"#4c4545\" }}>\n              {dictionary && dictionary[currentWord]?.category}\n            </p>\n            <p style={{ color: \"#4c4545\" }}>\n              {dictionary && dictionary[currentWord]?.etymology}\n            </p>\n            {dictionary && dictionary[currentWord]?.definition}\n            <p>\n              {dictionary[currentWord]?.example && (\n                <li>{dictionary[currentWord]?.example}</li>\n              )}\n            </p>\n            <p>\n              {dictionary[currentWord]?.shortDef &&\n                dictionary[currentWord]?.shortDef}\n            </p>\n            <p>\n              {dictionary[currentWord]?.subExample && (\n                <li>{dictionary[currentWord]?.subExample}</li>\n              )}\n            </p>\n          </div>\n        </Fade>\n      </Modal>\n\n      {/* Add Word Modal */}\n      <AddNewWordModal\n        loading={loading}\n        setLoading={setLoading}\n        showAddForm={showAddForm}\n        handleSubmit={handleSubmit}\n        setShowAddForm={setShowAddForm}\n        searchText={searchText}\n        setSearchText={setSearchText}\n      />\n    </>\n  );\n};\n\nexport default WordsList;\n","import { useState } from 'react';\nimport Navbar from './components/Navbar'\nimport WordsList from './components/WordsList'\n\nconst App = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  return (\n    <div className=\"App\">\n      <Navbar searchText={searchText} setSearchText={setSearchText} />\n      <WordsList searchText={searchText} />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\n// import bugsReducer from './bugs';\n// import projectsReducer from './projects';\n// import userReducer from './users';\nimport wordsReducer from './words'\n\nexport default combineReducers({\n    words: wordsReducer,\n});\n","import { combineReducers } from 'redux';\nimport entitiesReducer from './entities';\n\nexport default combineReducers({\n    entities: entitiesReducer,\n});\n","import axios from 'axios';\nimport * as actions from '../apiactions';\n\nconst api = ({ dispatch }) => (next) => async (action) => {\n    if (action.type !== actions.apiCallBegan.type) return next(action);\n\n    const { url, method, data, onStart, onSuccess, onError } = action.payload;\n\n    if (onStart) dispatch({ type: onStart });\n\n    next(action);\n\n    try {\n        const response = await axios.request({\n            baseURL: 'https://vocabs-dictionary.herokuapp.com/allwords',\n            url,\n            method,\n            data,\n        });\n        // General\n        dispatch(actions.apiCallSuccess(response.data));\n        // Specific\n        if (onSuccess) dispatch({ type: onSuccess, payload: response.data });\n    } catch (error) {\n        // General\n        dispatch(actions.apiCallFailed(error.message));\n        // Specific\n        if (onError) dispatch({ type: onError, payload: error.message });\n    }\n};\n\nexport default api;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport configureStore from './store/configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport reducer from './reducer';\nimport api from './middleware/api';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function () {\n    return configureStore({\n        reducer,\n        middleware: [\n            ...getDefaultMiddleware(),\n            api,\n        ],\n    });\n}\n"],"sourceRoot":""}