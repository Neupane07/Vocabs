{"ast":null,"code":"import axios from 'axios';\nimport * as actions from '../apiactions';\n\nconst api = ({\n  dispatch\n}) => next => async action => {\n  if (action.type !== actions.apiCallBegan.type) return next(action);\n  const {\n    url,\n    method,\n    data,\n    onStart,\n    onSuccess,\n    onError\n  } = action.payload;\n  if (onStart) dispatch({\n    type: onStart\n  });\n  next(action);\n\n  try {\n    const response = await axios.request({\n      baseURL: 'https://vocabs-dictionary.herokuapp.com/allwords',\n      url,\n      method,\n      data\n    }); // General\n\n    dispatch(actions.apiCallSuccess(response.data)); // Specific\n\n    if (onSuccess) dispatch({\n      type: onSuccess,\n      payload: response.data\n    });\n  } catch (error) {\n    // General\n    dispatch(actions.apiCallFailed(error.message)); // Specific\n\n    if (onError) dispatch({\n      type: onError,\n      payload: error.message\n    });\n  }\n};\n\nexport default api;","map":{"version":3,"sources":["/home/neupane/Desktop/vocabs/client/src/store/middleware/api.js"],"names":["axios","actions","api","dispatch","next","action","type","apiCallBegan","url","method","data","onStart","onSuccess","onError","payload","response","request","baseURL","apiCallSuccess","error","apiCallFailed","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmBC,IAAD,IAAU,MAAOC,MAAP,IAAkB;AACtD,MAAIA,MAAM,CAACC,IAAP,KAAgBL,OAAO,CAACM,YAAR,CAAqBD,IAAzC,EAA+C,OAAOF,IAAI,CAACC,MAAD,CAAX;AAE/C,QAAM;AAAEG,IAAAA,GAAF;AAAOC,IAAAA,MAAP;AAAeC,IAAAA,IAAf;AAAqBC,IAAAA,OAArB;AAA8BC,IAAAA,SAA9B;AAAyCC,IAAAA;AAAzC,MAAqDR,MAAM,CAACS,OAAlE;AAEA,MAAIH,OAAJ,EAAaR,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEK;AAAR,GAAD,CAAR;AAEbP,EAAAA,IAAI,CAACC,MAAD,CAAJ;;AAEA,MAAI;AACA,UAAMU,QAAQ,GAAG,MAAMf,KAAK,CAACgB,OAAN,CAAc;AACjCC,MAAAA,OAAO,EAAE,kDADwB;AAEjCT,MAAAA,GAFiC;AAGjCC,MAAAA,MAHiC;AAIjCC,MAAAA;AAJiC,KAAd,CAAvB,CADA,CAOA;;AACAP,IAAAA,QAAQ,CAACF,OAAO,CAACiB,cAAR,CAAuBH,QAAQ,CAACL,IAAhC,CAAD,CAAR,CARA,CASA;;AACA,QAAIE,SAAJ,EAAeT,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEM,SAAR;AAAmBE,MAAAA,OAAO,EAAEC,QAAQ,CAACL;AAArC,KAAD,CAAR;AAClB,GAXD,CAWE,OAAOS,KAAP,EAAc;AACZ;AACAhB,IAAAA,QAAQ,CAACF,OAAO,CAACmB,aAAR,CAAsBD,KAAK,CAACE,OAA5B,CAAD,CAAR,CAFY,CAGZ;;AACA,QAAIR,OAAJ,EAAaV,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEO,OAAR;AAAiBC,MAAAA,OAAO,EAAEK,KAAK,CAACE;AAAhC,KAAD,CAAR;AAChB;AACJ,CA1BD;;AA4BA,eAAenB,GAAf","sourcesContent":["import axios from 'axios';\nimport * as actions from '../apiactions';\n\nconst api = ({ dispatch }) => (next) => async (action) => {\n    if (action.type !== actions.apiCallBegan.type) return next(action);\n\n    const { url, method, data, onStart, onSuccess, onError } = action.payload;\n\n    if (onStart) dispatch({ type: onStart });\n\n    next(action);\n\n    try {\n        const response = await axios.request({\n            baseURL: 'https://vocabs-dictionary.herokuapp.com/allwords',\n            url,\n            method,\n            data,\n        });\n        // General\n        dispatch(actions.apiCallSuccess(response.data));\n        // Specific\n        if (onSuccess) dispatch({ type: onSuccess, payload: response.data });\n    } catch (error) {\n        // General\n        dispatch(actions.apiCallFailed(error.message));\n        // Specific\n        if (onError) dispatch({ type: onError, payload: error.message });\n    }\n};\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}