{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst slice = createSlice({\n  name: 'words',\n  initialState: {\n    list: [],\n    loading: false,\n    lastfetch: null\n  },\n  reducers: {\n    wordsRequested: (words, action) => {\n      words.loading = true;\n    },\n    wordsReceived: (words, action) => {\n      words.list = action.payload;\n      words.loading = false;\n      words.lastfetch = Date().now();\n    },\n    wordsRequestFailed: (words, action) => {\n      words.loading = false;\n    },\n    wordAdded: (state, action) => {\n      state.push(action.payload);\n    }\n  }\n});\nexport const {\n  wordAdded,\n  setAllWords\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"sources":["/home/neupane/workspace/Projects/Vocabs/client/src/store/dictionarySlice.js"],"names":["createSlice","slice","name","initialState","list","loading","lastfetch","reducers","wordsRequested","words","action","wordsReceived","payload","Date","now","wordsRequestFailed","wordAdded","state","push","setAllWords","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,KAAK,GAAGD,WAAW,CAAC;AACtBE,EAAAA,IAAI,EAAE,OADgB;AAEtBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,IAAI,EAAE,EADI;AAEVC,IAAAA,OAAO,EAAE,KAFC;AAGVC,IAAAA,SAAS,EAAE;AAHD,GAFQ;AAOtBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACH,KAHK;AAKNM,IAAAA,aAAa,EAAE,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACL,IAAN,GAAaM,MAAM,CAACE,OAApB;AACAH,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACAI,MAAAA,KAAK,CAACH,SAAN,GAAkBO,IAAI,GAAGC,GAAP,EAAlB;AACH,KATK;AAWNC,IAAAA,kBAAkB,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACnCD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACH,KAbK;AAcNW,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQP,MAAR,KAAmB;AAC1BO,MAAAA,KAAK,CAACC,IAAN,CAAWR,MAAM,CAACE,OAAlB;AACH;AAhBK;AAPY,CAAD,CAAzB;AA0BA,OAAO,MAAM;AAAEI,EAAAA,SAAF;AAAaG,EAAAA;AAAb,IAA6BlB,KAAK,CAACmB,OAAzC;AACP,eAAenB,KAAK,CAACoB,OAArB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst slice = createSlice({\n    name: 'words',\n    initialState: {\n        list: [],\n        loading: false,\n        lastfetch: null\n    },\n    reducers: {\n        wordsRequested: (words, action) => {\n            words.loading = true\n        },\n\n        wordsReceived: (words, action) => {\n            words.list = action.payload;\n            words.loading = false;\n            words.lastfetch = Date().now();\n        },\n\n        wordsRequestFailed: (words, action) => {\n            words.loading = false;\n        },\n        wordAdded: (state, action) => {\n            state.push(action.payload)\n        },\n    }\n})\nexport const { wordAdded, setAllWords } = slice.actions\nexport default slice.reducer\n"]},"metadata":{},"sourceType":"module"}