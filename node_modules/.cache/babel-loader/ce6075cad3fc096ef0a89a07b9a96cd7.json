{"ast":null,"code":"var _jsxFileName = \"/home/neupane/workspace/Projects/Vocabs/client/src/components/WordsList.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: \"inline\"\n  }\n}));\n\nconst WordsList = ({\n  words\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: classes.root,\n    children: words && words.map(word => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: word.title,\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                component: \"span\",\n                variant: \"body2\",\n                className: classes.inline,\n                color: \"textPrimary\",\n                children: word.definition\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"fullWidth\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, word.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WordsList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = WordsList;\nexport default WordsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordsList\");","map":{"version":3,"sources":["/home/neupane/workspace/Projects/Vocabs/client/src/components/WordsList.jsx"],"names":["React","makeStyles","List","ListItem","Divider","ListItemText","Typography","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","inline","display","WordsList","words","classes","map","word","title","definition","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAHtC,GADiC;AAMvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH;AAN+B,CAAZ,CAAD,CAA5B;;AAWA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAC/B,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEa,OAAO,CAACX,IAAzB;AAAA,cACGU,KAAK,IACJA,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAU;AAClB,0BACE,QAAC,KAAD,CAAO,QAAP;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,UAAU,EAAC,YAArB;AAAA,iCACE,QAAC,YAAD;AACE,YAAA,OAAO,EAAEA,IAAI,CAACC,KADhB;AAEE,YAAA,SAAS,eACP,QAAC,KAAD,CAAO,QAAP;AAAA,qCACE,QAAC,UAAD;AACE,gBAAA,SAAS,EAAC,MADZ;AAEE,gBAAA,OAAO,EAAC,OAFV;AAGE,gBAAA,SAAS,EAAEH,OAAO,CAACJ,MAHrB;AAIE,gBAAA,KAAK,EAAC,aAJR;AAAA,0BAKGM,IAAI,CAACE;AALR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAiBE,QAAC,OAAD;AAAS,UAAA,OAAO,EAAC,WAAjB;AAA6B,UAAA,SAAS,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA,SAAqBF,IAAI,CAACG,EAA1B;AAAA;AAAA;AAAA;AAAA,cADF;AAqBD,KAtBD;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CA9BD;;GAAMP,S;UACYX,S;;;KADZW,S;AAgCN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: \"inline\",\n  },\n}));\n\nconst WordsList = ({ words }) => {\n  const classes = useStyles();\n  return (\n    <List className={classes.root}>\n      {words &&\n        words.map((word) => {\n          return (\n            <React.Fragment key={word.id}>\n              <ListItem alignItems=\"flex-start\">\n                <ListItemText\n                  primary={word.title}\n                  secondary={\n                    <React.Fragment>\n                      <Typography\n                        component=\"span\"\n                        variant=\"body2\"\n                        className={classes.inline}\n                        color=\"textPrimary\">\n                        {word.definition}\n                      </Typography>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n              <Divider variant=\"fullWidth\" component=\"li\" />\n            </React.Fragment>\n          );\n        })}\n    </List>\n  );\n};\n\nexport default WordsList;\n"]},"metadata":{},"sourceType":"module"}