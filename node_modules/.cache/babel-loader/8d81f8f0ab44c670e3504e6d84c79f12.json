{"ast":null,"code":"var _jsxFileName = \"/home/neupane/workspace/Projects/Vocabs/client/src/components/AddNewWordModal.jsx\",\n    _s = $RefreshSig$();\n\nimport { makeStyles, Modal } from \"@material-ui/core\";\nimport React from \"react\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport { Button } from \"@material-ui/core\";\nimport { TextField } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport { Fade } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  addWordForm: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nconst AddNewWordModal = ({\n  showAddForm,\n  handleSubmit,\n  setShowAddForm,\n  searchText,\n  setSearchText\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      \"aria-labelledby\": \"transition-modal-title\",\n      \"aria-describedby\": \"transition-modal-description\",\n      className: classes.modal,\n      open: showAddForm,\n      onClose: () => setShowAddForm(false),\n      closeAfterTransition: true,\n      BackdropComponent: Backdrop,\n      BackdropProps: {\n        timeout: 500\n      },\n      children: /*#__PURE__*/_jsxDEV(Fade, {\n        in: showAddForm,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.addWordForm,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Add To Dictionary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-basic\",\n              label: \"New Word\",\n              value: searchText,\n              onChange: e => setSearchText(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setShowAddForm(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSubmit,\n              children: [\"Add\", \" \", /*#__PURE__*/_jsxDEV(Loader, {\n                type: \"Circles\",\n                color: \"#00BFFF\",\n                height: 80,\n                width: 80\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddNewWordModal, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddNewWordModal;\nexport default AddNewWordModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewWordModal\");","map":{"version":3,"sources":["/home/neupane/workspace/Projects/Vocabs/client/src/components/AddNewWordModal.jsx"],"names":["makeStyles","Modal","React","Backdrop","Button","TextField","Typography","Fade","useStyles","theme","modal","width","height","display","alignItems","justifyContent","addWordForm","backgroundColor","palette","background","paper","border","padding","spacing","AddNewWordModal","showAddForm","handleSubmit","setShowAddForm","searchText","setSearchText","classes","timeout","e","target","value"],"mappings":"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","sourcesContent":["import { makeStyles, Modal } from \"@material-ui/core\";\nimport React from \"react\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport { Button } from \"@material-ui/core\";\nimport { TextField } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport { Fade } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  addWordForm: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst AddNewWordModal = ({\n  showAddForm,\n  handleSubmit,\n  setShowAddForm,\n  searchText,\n  setSearchText,\n}) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={showAddForm}\n        onClose={() => setShowAddForm(false)}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}>\n        <Fade in={showAddForm}>\n          <div className={classes.addWordForm}>\n            <Typography variant=\"h6\">Add To Dictionary</Typography>\n            <form onSubmit={handleSubmit}>\n              <TextField\n                id=\"standard-basic\"\n                label=\"New Word\"\n                value={searchText}\n                onChange={(e) => setSearchText(e.target.value)}\n              />\n              <Button onClick={() => setShowAddForm(false)}>Cancel</Button>\n              <Button onClick={handleSubmit}>\n                Add{\" \"}\n                <Loader type=\"Circles\" color=\"#00BFFF\" height={80} width={80} />\n              </Button>\n            </form>\n          </div>\n        </Fade>\n      </Modal>\n    </>\n  );\n};\n\nexport default AddNewWordModal;\n"]},"metadata":{},"sourceType":"module"}