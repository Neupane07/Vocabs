{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { apiCallBegan } from './apiactions';\nconst slice = createSlice({\n  name: 'words',\n  initialState: {\n    list: [],\n    loading: false,\n    lastfetch: null\n  },\n  reducers: {\n    wordsRequested: (words, action) => {\n      words.loading = true;\n    },\n    wordsReceived: (words, action) => {\n      words.list = action.payload;\n      words.loading = false;\n      words.lastfetch = Date.now();\n    },\n    wordsRequestFailed: (words, action) => {\n      words.loading = false;\n    },\n    wordAdded: (words, action) => {\n      words.push(action.payload);\n    }\n  }\n});\nexport const {\n  wordsRequested,\n  wordsReceived,\n  wordsRequestFailed,\n  wordAdded\n} = slice.actions;\nexport default slice.reducer; //Action Creators\n\nconst url = ''; //Getting List of words from server\n\nexport const loadWords = () => (dispatch, getState) => {\n  return dispatch(apiCallBegan({\n    url,\n    onStart: wordsRequested.type,\n    onSuccess: wordsReceived.type,\n    onError: wordsRequestFailed.type\n  }));\n};","map":{"version":3,"sources":["/home/neupane/workspace/Projects/Vocabs/client/src/store/words.js"],"names":["createSlice","apiCallBegan","slice","name","initialState","list","loading","lastfetch","reducers","wordsRequested","words","action","wordsReceived","payload","Date","now","wordsRequestFailed","wordAdded","push","actions","reducer","url","loadWords","dispatch","getState","onStart","type","onSuccess","onError"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,QAA6B,cAA7B;AAEA,MAAMC,KAAK,GAAGF,WAAW,CAAC;AACtBG,EAAAA,IAAI,EAAE,OADgB;AAEtBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,IAAI,EAAE,EADI;AAEVC,IAAAA,OAAO,EAAE,KAFC;AAGVC,IAAAA,SAAS,EAAE;AAHD,GAFQ;AAOtBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACH,KAHK;AAKNM,IAAAA,aAAa,EAAE,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACL,IAAN,GAAaM,MAAM,CAACE,OAApB;AACAH,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACAI,MAAAA,KAAK,CAACH,SAAN,GAAkBO,IAAI,CAACC,GAAL,EAAlB;AACH,KATK;AAWNC,IAAAA,kBAAkB,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACnCD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACH,KAbK;AAcNW,IAAAA,SAAS,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;AAC1BD,MAAAA,KAAK,CAACQ,IAAN,CAAWP,MAAM,CAACE,OAAlB;AACH;AAhBK;AAPY,CAAD,CAAzB;AA0BA,OAAO,MAAM;AAAEJ,EAAAA,cAAF;AAAkBG,EAAAA,aAAlB;AAAiCI,EAAAA,kBAAjC;AAAqDC,EAAAA;AAArD,IAAmEf,KAAK,CAACiB,OAA/E;AACP,eAAejB,KAAK,CAACkB,OAArB,C,CAEA;;AACA,MAAMC,GAAG,GAAG,EAAZ,C,CAEA;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACnD,SAAOD,QAAQ,CACXtB,YAAY,CAAC;AACToB,IAAAA,GADS;AAETI,IAAAA,OAAO,EAAEhB,cAAc,CAACiB,IAFf;AAGTC,IAAAA,SAAS,EAAEf,aAAa,CAACc,IAHhB;AAITE,IAAAA,OAAO,EAAEZ,kBAAkB,CAACU;AAJnB,GAAD,CADD,CAAf;AAQH,CATM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { apiCallBegan } from './apiactions';\n\nconst slice = createSlice({\n    name: 'words',\n    initialState: {\n        list: [],\n        loading: false,\n        lastfetch: null\n    },\n    reducers: {\n        wordsRequested: (words, action) => {\n            words.loading = true\n        },\n\n        wordsReceived: (words, action) => {\n            words.list = action.payload;\n            words.loading = false;\n            words.lastfetch = Date.now();\n        },\n\n        wordsRequestFailed: (words, action) => {\n            words.loading = false;\n        },\n        wordAdded: (words, action) => {\n            words.push(action.payload)\n        },\n    }\n})\nexport const { wordsRequested, wordsReceived, wordsRequestFailed, wordAdded } = slice.actions\nexport default slice.reducer\n\n//Action Creators\nconst url = ''\n\n//Getting List of words from server\n\nexport const loadWords = () => (dispatch, getState) => {\n    return dispatch(\n        apiCallBegan({\n            url,\n            onStart: wordsRequested.type,\n            onSuccess: wordsReceived.type,\n            onError: wordsRequestFailed.type,\n        })\n    );\n};"]},"metadata":{},"sourceType":"module"}