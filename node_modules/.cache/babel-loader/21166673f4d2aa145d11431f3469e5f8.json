{"ast":null,"code":"import _regeneratorRuntime from\"/home/neupane/Desktop/vocabs/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/neupane/Desktop/vocabs/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import*as actions from'../apiactions';var api=function api(_ref){var dispatch=_ref.dispatch;return function(next){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(action){var _action$payload,url,method,data,onStart,onSuccess,onError,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(action.type!==actions.apiCallBegan.type)){_context.next=2;break;}return _context.abrupt(\"return\",next(action));case 2:_action$payload=action.payload,url=_action$payload.url,method=_action$payload.method,data=_action$payload.data,onStart=_action$payload.onStart,onSuccess=_action$payload.onSuccess,onError=_action$payload.onError;if(onStart)dispatch({type:onStart});next(action);_context.prev=5;_context.next=8;return axios.request({baseURL:'https://vocabs-dictionary.herokuapp.com/allwords',url:url,method:method,data:data});case 8:response=_context.sent;// General\ndispatch(actions.apiCallSuccess(response.data));// Specific\nif(onSuccess)dispatch({type:onSuccess,payload:response.data});_context.next=17;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](5);// General\ndispatch(actions.apiCallFailed(_context.t0.message));// Specific\nif(onError)dispatch({type:onError,payload:_context.t0.message});case 17:case\"end\":return _context.stop();}}},_callee,null,[[5,13]]);}));return function(_x){return _ref2.apply(this,arguments);};}();};};export default api;","map":{"version":3,"sources":["/home/neupane/Desktop/vocabs/client/src/store/middleware/api.js"],"names":["axios","actions","api","dispatch","next","action","type","apiCallBegan","payload","url","method","data","onStart","onSuccess","onError","request","baseURL","response","apiCallSuccess","apiCallFailed","message"],"mappings":"iTAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,eAAzB,CAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,UAAGC,CAAAA,QAAH,MAAGA,QAAH,OAAkB,UAACC,IAAD,kGAAU,iBAAOC,MAAP,8LAChCA,MAAM,CAACC,IAAP,GAAgBL,OAAO,CAACM,YAAR,CAAqBD,IADL,0DACkBF,IAAI,CAACC,MAAD,CADtB,yBAGuBA,MAAM,CAACG,OAH9B,CAG5BC,GAH4B,iBAG5BA,GAH4B,CAGvBC,MAHuB,iBAGvBA,MAHuB,CAGfC,IAHe,iBAGfA,IAHe,CAGTC,OAHS,iBAGTA,OAHS,CAGAC,SAHA,iBAGAA,SAHA,CAGWC,OAHX,iBAGWA,OAHX,CAKpC,GAAIF,OAAJ,CAAaT,QAAQ,CAAC,CAAEG,IAAI,CAAEM,OAAR,CAAD,CAAR,CAEbR,IAAI,CAACC,MAAD,CAAJ,CAPoC,sCAUTL,CAAAA,KAAK,CAACe,OAAN,CAAc,CACjCC,OAAO,CAAE,kDADwB,CAEjCP,GAAG,CAAHA,GAFiC,CAGjCC,MAAM,CAANA,MAHiC,CAIjCC,IAAI,CAAJA,IAJiC,CAAd,CAVS,QAU1BM,QAV0B,eAgBhC;AACAd,QAAQ,CAACF,OAAO,CAACiB,cAAR,CAAuBD,QAAQ,CAACN,IAAhC,CAAD,CAAR,CACA;AACA,GAAIE,SAAJ,CAAeV,QAAQ,CAAC,CAAEG,IAAI,CAAEO,SAAR,CAAmBL,OAAO,CAAES,QAAQ,CAACN,IAArC,CAAD,CAAR,CAnBiB,iFAqBhC;AACAR,QAAQ,CAACF,OAAO,CAACkB,aAAR,CAAsB,YAAMC,OAA5B,CAAD,CAAR,CACA;AACA,GAAIN,OAAJ,CAAaX,QAAQ,CAAC,CAAEG,IAAI,CAAEQ,OAAR,CAAiBN,OAAO,CAAE,YAAMY,OAAhC,CAAD,CAAR,CAxBmB,qEAAV,iEAAlB,EAAZ,CA4BA,cAAelB,CAAAA,GAAf","sourcesContent":["import axios from 'axios';\nimport * as actions from '../apiactions';\n\nconst api = ({ dispatch }) => (next) => async (action) => {\n    if (action.type !== actions.apiCallBegan.type) return next(action);\n\n    const { url, method, data, onStart, onSuccess, onError } = action.payload;\n\n    if (onStart) dispatch({ type: onStart });\n\n    next(action);\n\n    try {\n        const response = await axios.request({\n            baseURL: 'https://vocabs-dictionary.herokuapp.com/allwords',\n            url,\n            method,\n            data,\n        });\n        // General\n        dispatch(actions.apiCallSuccess(response.data));\n        // Specific\n        if (onSuccess) dispatch({ type: onSuccess, payload: response.data });\n    } catch (error) {\n        // General\n        dispatch(actions.apiCallFailed(error.message));\n        // Specific\n        if (onError) dispatch({ type: onError, payload: error.message });\n    }\n};\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}