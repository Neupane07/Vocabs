{"ast":null,"code":"var _jsxFileName = \"/home/neupane/workspace/Projects/Vocabs/client/src/components/WordsList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Modal } from \"@material-ui/core\";\nimport { Fade } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loadWords, wordAdded } from \"../store/words\";\nimport AddNewWordModal from \"./AddNewWordModal\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n    marginTop: \"50px\",\n    backgroundColor: theme.palette.background.paper,\n    overflow: \"auto\",\n    fontFamily: \"Kumbh Sans\"\n  },\n  inline: {\n    display: \"inline\"\n  },\n  modal: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    height: \"100vh\",\n    width: \"100vh\",\n    marginTop: \"10vh\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  fab: {\n    position: \"fixed\",\n    bottom: \"20px\",\n    right: 10\n  }\n}));\n\nconst WordsList = () => {\n  _s();\n\n  var _dictionary$currentWo, _dictionary$currentWo2, _dictionary$currentWo3, _dictionary$currentWo4, _dictionary$currentWo5, _dictionary$currentWo6, _dictionary$currentWo7;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [currentWord, setCurrentWord] = useState(0);\n  const dictionary = useSelector(state => state.entities.words.list);\n  console.log(\"dicionary\", dictionary);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    const getAllWords = async () => {\n      dispatch(loadWords());\n    };\n\n    getAllWords();\n  }, [dispatch]); //Adding new Word\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!searchText) return;\n    setLoading(true);\n    const {\n      data\n    } = await axios.post(\"https://vocabs-dictionary.herokuapp.com/verifyword\", {\n      word: searchText\n    });\n    console.log(data);\n    dispatch(wordAdded(data));\n    setSearchText(\"\");\n    setLoading(false);\n    setShowAddForm(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      className: classes.root,\n      children: dictionary && dictionary.map((word, idx) => {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            alignItems: \"flex-start\",\n            onClick: () => {\n              setOpen(true);\n              setCurrentWord(idx);\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: word.key,\n              secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"span\",\n                  variant: \"body2\",\n                  className: classes.inline,\n                  color: \"textPrimary\",\n                  children: [\"(\", word.category, \")\", word.definition]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"fullWidth\",\n            component: \"li\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this)]\n        }, word.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Fab, {\n      className: classes.fab,\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(AddIcon, {\n        onClick: () => setShowAddForm(true),\n        children: \"Add word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      className: classes.modal,\n      \"aria-labelledby\": \"transition-modal-title\",\n      \"aria-describedby\": \"transition-modal-description\",\n      open: open,\n      onClose: handleClose,\n      closeAfterTransition: true,\n      BackdropComponent: Backdrop,\n      BackdropProps: {\n        timeout: 500\n      },\n      children: /*#__PURE__*/_jsxDEV(Fade, {\n        in: open,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              border: \"none\",\n              marginLeft: \"98%\"\n            },\n            onClick: () => setOpen(false),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            id: \"transition-modal-title\",\n            children: dictionary && ((_dictionary$currentWo = dictionary[currentWord]) === null || _dictionary$currentWo === void 0 ? void 0 : _dictionary$currentWo.key)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"transition-modal-description\",\n            children: dictionary && ((_dictionary$currentWo2 = dictionary[currentWord]) === null || _dictionary$currentWo2 === void 0 ? void 0 : _dictionary$currentWo2.category)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: dictionary && ((_dictionary$currentWo3 = dictionary[currentWord]) === null || _dictionary$currentWo3 === void 0 ? void 0 : _dictionary$currentWo3.etymology)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), dictionary && ((_dictionary$currentWo4 = dictionary[currentWord]) === null || _dictionary$currentWo4 === void 0 ? void 0 : _dictionary$currentWo4.definition), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: dictionary && ((_dictionary$currentWo5 = dictionary[currentWord]) === null || _dictionary$currentWo5 === void 0 ? void 0 : _dictionary$currentWo5.example)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: dictionary && ((_dictionary$currentWo6 = dictionary[currentWord]) === null || _dictionary$currentWo6 === void 0 ? void 0 : _dictionary$currentWo6.shortDef)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: dictionary && ((_dictionary$currentWo7 = dictionary[currentWord]) === null || _dictionary$currentWo7 === void 0 ? void 0 : _dictionary$currentWo7.subExample)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddNewWordModal, {\n      loading: loading,\n      setLoading: setLoading,\n      showAddForm: showAddForm,\n      handleSubmit: handleSubmit,\n      setShowAddForm: setShowAddForm,\n      searchText: searchText,\n      setSearchText: setSearchText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(WordsList, \"YyvhAxm41vxHI/xI9m6Yr3OPkWg=\", false, function () {\n  return [useDispatch, useStyles, useSelector];\n});\n\n_c = WordsList;\nexport default WordsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordsList\");","map":{"version":3,"sources":["/home/neupane/workspace/Projects/Vocabs/client/src/components/WordsList.jsx"],"names":["React","useEffect","useState","makeStyles","List","ListItem","Divider","ListItemText","Backdrop","Typography","Fab","AddIcon","Modal","Fade","useSelector","useDispatch","loadWords","wordAdded","AddNewWordModal","axios","useStyles","theme","root","width","maxWidth","maxHeight","marginTop","backgroundColor","palette","background","paper","overflow","fontFamily","inline","display","modal","height","alignItems","justifyContent","border","boxShadow","shadows","padding","spacing","fab","position","bottom","right","WordsList","dispatch","classes","open","setOpen","showAddForm","setShowAddForm","searchText","setSearchText","loading","setLoading","currentWord","setCurrentWord","dictionary","state","entities","words","list","console","log","handleClose","getAllWords","handleSubmit","e","preventDefault","data","post","word","map","idx","key","category","definition","timeout","marginLeft","etymology","example","shortDef","subExample"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,gBAArC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAS,GAAGjB,UAAU,CAAEkB,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,SAAS,EAAE,MAHP;AAIJC,IAAAA,SAAS,EAAE,MAJP;AAKJC,IAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC,KALtC;AAMJC,IAAAA,QAAQ,EAAE,MANN;AAOJC,IAAAA,UAAU,EAAE;AAPR,GADiC;AAUvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH,GAV+B;AAavCC,EAAAA,KAAK,EAAE;AACLZ,IAAAA,KAAK,EAAE,MADF;AAELa,IAAAA,MAAM,EAAE,MAFH;AAGLF,IAAAA,OAAO,EAAE,MAHJ;AAILG,IAAAA,UAAU,EAAE,QAJP;AAKLC,IAAAA,cAAc,EAAE;AALX,GAbgC;AAoBvCR,EAAAA,KAAK,EAAE;AACLH,IAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC,KADrC;AAELS,IAAAA,MAAM,EAAE,gBAFH;AAGLH,IAAAA,MAAM,EAAE,OAHH;AAILb,IAAAA,KAAK,EAAE,OAJF;AAKLG,IAAAA,SAAS,EAAE,MALN;AAMLc,IAAAA,SAAS,EAAEnB,KAAK,CAACoB,OAAN,CAAc,CAAd,CANN;AAOLC,IAAAA,OAAO,EAAErB,KAAK,CAACsB,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AAPJ,GApBgC;AA6BvCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,QAAQ,EAAE,OADP;AAEHC,IAAAA,MAAM,EAAE,MAFL;AAGHC,IAAAA,KAAK,EAAE;AAHJ;AA7BkC,CAAZ,CAAD,CAA5B;;AAoCA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAAA;;AACtB,QAAMC,QAAQ,GAAGlC,WAAW,EAA5B;AACA,QAAMmC,OAAO,GAAG9B,SAAS,EAAzB;AACA,QAAM,CAAC+B,IAAD,EAAOC,OAAP,IAAkBlD,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACmD,WAAD,EAAcC,cAAd,IAAgCpD,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACqD,UAAD,EAAaC,aAAb,IAA8BtD,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACuD,OAAD,EAAUC,UAAV,IAAwBxD,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACyD,WAAD,EAAcC,cAAd,IAAgC1D,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM2D,UAAU,GAAG/C,WAAW,CAAEgD,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,KAAf,CAAqBC,IAAjC,CAA9B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBN,UAAzB;;AACA,QAAMO,WAAW,GAAG,MAAM;AACxBhB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIAnD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoE,WAAW,GAAG,YAAY;AAC9BpB,MAAAA,QAAQ,CAACjC,SAAS,EAAV,CAAR;AACD,KAFD;;AAGAqD,IAAAA,WAAW;AACZ,GALQ,EAKN,CAACpB,QAAD,CALM,CAAT,CAdsB,CAqBtB;;AACA,QAAMqB,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAI,CAACjB,UAAL,EAAiB;AACjBG,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAM;AAAEe,MAAAA;AAAF,QAAW,MAAMtD,KAAK,CAACuD,IAAN,CACrB,oDADqB,EAErB;AACEC,MAAAA,IAAI,EAAEpB;AADR,KAFqB,CAAvB;AAMAW,IAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACAxB,IAAAA,QAAQ,CAAChC,SAAS,CAACwD,IAAD,CAAV,CAAR;AAEAjB,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAhBD;;AAkBA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEJ,OAAO,CAAC5B,IAAzB;AAAA,gBACGuC,UAAU,IACTA,UAAU,CAACe,GAAX,CAAe,CAACD,IAAD,EAAOE,GAAP,KAAe;AAC5B,4BACE,QAAC,KAAD,CAAO,QAAP;AAAA,kCACE,QAAC,QAAD;AACE,YAAA,UAAU,EAAC,YADb;AAEE,YAAA,OAAO,EAAE,MAAM;AACbzB,cAAAA,OAAO,CAAC,IAAD,CAAP;AACAQ,cAAAA,cAAc,CAACiB,GAAD,CAAd;AACD,aALH;AAAA,mCAME,QAAC,YAAD;AACE,cAAA,OAAO,EAAEF,IAAI,CAACG,GADhB;AAEE,cAAA,SAAS,eACP,QAAC,KAAD,CAAO,QAAP;AAAA,uCACE,QAAC,UAAD;AACE,kBAAA,SAAS,EAAC,MADZ;AAEE,kBAAA,OAAO,EAAC,OAFV;AAGE,kBAAA,SAAS,EAAE5B,OAAO,CAACjB,MAHrB;AAIE,kBAAA,KAAK,EAAC,aAJR;AAAA,kCAKI0C,IAAI,CAACI,QALT,OAKoBJ,IAAI,CAACK,UALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,kBADF,eAsBE,QAAC,OAAD;AAAS,YAAA,OAAO,EAAC,WAAjB;AAA6B,YAAA,SAAS,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,kBAtBF;AAAA,WAAqBL,IAAI,CAACG,GAA1B;AAAA;AAAA;AAAA;AAAA,gBADF;AA0BD,OA3BD;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF,eAgCE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAE5B,OAAO,CAACN,GAAxB;AAA6B,MAAA,KAAK,EAAC,SAAnC;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,OAAO,EAAE,MAAMU,cAAc,CAAC,IAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhCF,eAoCE,QAAC,KAAD;AACE,MAAA,SAAS,EAAEJ,OAAO,CAACf,KADrB;AAEE,yBAAgB,wBAFlB;AAGE,0BAAiB,8BAHnB;AAIE,MAAA,IAAI,EAAEgB,IAJR;AAKE,MAAA,OAAO,EAAEiB,WALX;AAME,MAAA,oBAAoB,MANtB;AAOE,MAAA,iBAAiB,EAAE5D,QAPrB;AAQE,MAAA,aAAa,EAAE;AACbyE,QAAAA,OAAO,EAAE;AADI,OARjB;AAAA,6BAWE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE9B,IAAV;AAAA,+BACE;AAAK,UAAA,SAAS,EAAED,OAAO,CAACpB,KAAxB;AAAA,kCACE;AACE,YAAA,KAAK,EAAE;AAAES,cAAAA,MAAM,EAAE,MAAV;AAAkB2C,cAAAA,UAAU,EAAE;AAA9B,aADT;AAEE,YAAA,OAAO,EAAE,MAAM9B,OAAO,CAAC,KAAD,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAI,YAAA,EAAE,EAAC,wBAAP;AAAA,sBACGS,UAAU,8BAAIA,UAAU,CAACF,WAAD,CAAd,0DAAI,sBAAyBmB,GAA7B;AADb;AAAA;AAAA;AAAA;AAAA,kBANF,eASE;AAAG,YAAA,EAAE,EAAC,8BAAN;AAAA,sBACGjB,UAAU,+BAAIA,UAAU,CAACF,WAAD,CAAd,2DAAI,uBAAyBoB,QAA7B;AADb;AAAA;AAAA;AAAA;AAAA,kBATF,eAYE;AAAA,sBAAIlB,UAAU,+BAAIA,UAAU,CAACF,WAAD,CAAd,2DAAI,uBAAyBwB,SAA7B;AAAd;AAAA;AAAA;AAAA;AAAA,kBAZF,EAaGtB,UAAU,+BAAIA,UAAU,CAACF,WAAD,CAAd,2DAAI,uBAAyBqB,UAA7B,CAbb,eAcE;AAAA,mCACE;AAAA,wBAAKnB,UAAU,+BAAIA,UAAU,CAACF,WAAD,CAAd,2DAAI,uBAAyByB,OAA7B;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAdF,eAiBE;AAAA,mCACE;AAAA,wBAAKvB,UAAU,+BAAIA,UAAU,CAACF,WAAD,CAAd,2DAAI,uBAAyB0B,QAA7B;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAjBF,eAoBE;AAAA,mCACE;AAAA,wBAAKxB,UAAU,+BAAIA,UAAU,CAACF,WAAD,CAAd,2DAAI,uBAAyB2B,UAA7B;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,YApCF,eA4EE,QAAC,eAAD;AACE,MAAA,OAAO,EAAE7B,OADX;AAEE,MAAA,UAAU,EAAEC,UAFd;AAGE,MAAA,WAAW,EAAEL,WAHf;AAIE,MAAA,YAAY,EAAEiB,YAJhB;AAKE,MAAA,cAAc,EAAEhB,cALlB;AAME,MAAA,UAAU,EAAEC,UANd;AAOE,MAAA,aAAa,EAAEC;AAPjB;AAAA;AAAA;AAAA;AAAA,YA5EF;AAAA,kBADF;AAwFD,CAhID;;GAAMR,S;UACajC,W,EACDK,S,EAMGN,W;;;KARfkC,S;AAkIN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Modal } from \"@material-ui/core\";\nimport { Fade } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loadWords, wordAdded } from \"../store/words\";\nimport AddNewWordModal from \"./AddNewWordModal\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n    marginTop: \"50px\",\n    backgroundColor: theme.palette.background.paper,\n    overflow: \"auto\",\n    fontFamily: \"Kumbh Sans\",\n  },\n  inline: {\n    display: \"inline\",\n  },\n  modal: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    height: \"100vh\",\n    width: \"100vh\",\n    marginTop: \"10vh\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  fab: {\n    position: \"fixed\",\n    bottom: \"20px\",\n    right: 10,\n  },\n}));\n\nconst WordsList = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [currentWord, setCurrentWord] = useState(0);\n  const dictionary = useSelector((state) => state.entities.words.list);\n  console.log(\"dicionary\", dictionary);\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    const getAllWords = async () => {\n      dispatch(loadWords());\n    };\n    getAllWords();\n  }, [dispatch]);\n\n  //Adding new Word\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!searchText) return;\n    setLoading(true);\n    const { data } = await axios.post(\n      \"https://vocabs-dictionary.herokuapp.com/verifyword\",\n      {\n        word: searchText,\n      }\n    );\n    console.log(data);\n    dispatch(wordAdded(data));\n\n    setSearchText(\"\");\n    setLoading(false);\n    setShowAddForm(false);\n  };\n\n  return (\n    <>\n      <List className={classes.root}>\n        {dictionary &&\n          dictionary.map((word, idx) => {\n            return (\n              <React.Fragment key={word.key}>\n                <ListItem\n                  alignItems=\"flex-start\"\n                  onClick={() => {\n                    setOpen(true);\n                    setCurrentWord(idx);\n                  }}>\n                  <ListItemText\n                    primary={word.key}\n                    secondary={\n                      <React.Fragment>\n                        <Typography\n                          component=\"span\"\n                          variant=\"body2\"\n                          className={classes.inline}\n                          color=\"textPrimary\">\n                          ({word.category}){word.definition}\n                        </Typography>\n                      </React.Fragment>\n                    }\n                  />\n                </ListItem>\n                <Divider variant=\"fullWidth\" component=\"li\" />\n              </React.Fragment>\n            );\n          })}\n      </List>\n      <Fab className={classes.fab} color=\"primary\">\n        <AddIcon onClick={() => setShowAddForm(true)}>Add word</AddIcon>\n      </Fab>\n      {/* Full Screen Modal */}\n      <Modal\n        className={classes.modal}\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}>\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <button\n              style={{ border: \"none\", marginLeft: \"98%\" }}\n              onClick={() => setOpen(false)}>\n              x\n            </button>\n            <h1 id=\"transition-modal-title\">\n              {dictionary && dictionary[currentWord]?.key}\n            </h1>\n            <p id=\"transition-modal-description\">\n              {dictionary && dictionary[currentWord]?.category}\n            </p>\n            <p>{dictionary && dictionary[currentWord]?.etymology}</p>\n            {dictionary && dictionary[currentWord]?.definition}\n            <p>\n              <li>{dictionary && dictionary[currentWord]?.example}</li>\n            </p>\n            <p>\n              <li>{dictionary && dictionary[currentWord]?.shortDef}</li>\n            </p>\n            <p>\n              <li>{dictionary && dictionary[currentWord]?.subExample}</li>\n            </p>\n          </div>\n        </Fade>\n      </Modal>\n\n      {/* Add Word Modal */}\n      <AddNewWordModal\n        loading={loading}\n        setLoading={setLoading}\n        showAddForm={showAddForm}\n        handleSubmit={handleSubmit}\n        setShowAddForm={setShowAddForm}\n        searchText={searchText}\n        setSearchText={setSearchText}\n      />\n    </>\n  );\n};\n\nexport default WordsList;\n"]},"metadata":{},"sourceType":"module"}